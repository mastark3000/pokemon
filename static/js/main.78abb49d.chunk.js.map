{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Pokemon","useState","data","setData","getPokemonData","a","fetch","res","json","actualData","console","log","results","useEffect","className","id","datatype","map","name","url","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAyFeA,EAhFC,WAEZ,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAGMC,EAAc,uCAAG,8BAAAC,EAAA,+EAEGC,MAAM,0DAFT,cAETC,EAFS,gBAGUA,EAAIC,OAHd,OAGTC,EAHS,OAIfC,QAAQC,IAAIF,GACZC,QAAQC,IAAIF,GACZC,QAAQC,IAAIF,EAAWG,SACvBT,EAAQM,EAAWG,SAPJ,kDASfF,QAAQC,IAAI,SATG,0DAAH,qDA0BtB,OAVED,QAAQC,IAAIT,GAMZW,qBAAU,WACNT,MACD,IAIH,qCACI,oCACI,oBAAIU,UAAU,UAAd,8BACA,iDAOJ,8BAEI,uBAAOC,GAAG,UAAV,SAEI,kCAEA,qBAAIA,GAAG,MAAP,UAEI,oBAAIA,GAAG,KAAKC,SAAS,SAArB,kBACA,oBAAID,GAAG,MAAM,YAAU,SAAvB,qBAMAb,EAAKe,KAAI,SAAAf,GAAI,OACb,qBAAIa,GAAG,UAAP,UAEI,6BAAmBb,EAAKgB,MAAfhB,EAAKa,IACd,6BAAmBb,EAAKiB,KAAfjB,EAAKa,iBA7BlC,QC9BWK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.78abb49d.chunk.js","sourcesContent":["// import { cleanup } from \"@testing-library/react\";\nimport React,  { useEffect, useState } from \"react\";\n// import { Row } from \"reactstrap\";\nimport \"../src/App.css\";\n// import $ from \"jquery\";\n// import MetaTags from 'react-meta-tags';\n\n\n\nconst Pokemon = () => {\n\n    const [data, setData] = useState([]);\n   \n\n    const getPokemonData = async () => {\n        try{\n            const res = await fetch(\"https://pokeapi.co/api/v2/pokemon?offset=300&limit=100\");\n            const actualData = await res.json();\n            console.log(actualData);\n            console.log(actualData);\n            console.log(actualData.results);\n            setData(actualData.results);\n        }catch(err){\n            console.log(\"error\");\n        } \n    }\n    // const no = data[1].map((x)=>{   \n    //     return x; \n    //   });\n    // console.log(no);\n    console.log(data);\n\n     \n    \n \n\n    useEffect(() => {\n        getPokemonData();\n    }, []);\n\n  return (\n\n    <>\n        <section>\n            <h1 className=\"blinker\">ðŸ”´Live</h1>\n            <h2>Pokemon API </h2>\n        </section>\n\n\n        \n\n        \n        <div>\n        \n            <table id=\"mytable\">\n            \n                <tbody>\n                \n                <tr id=\"fix\">\n\n                    <td id=\"nm\" datatype=\"string\">Name</td>\n                    <td id=\"cnf\" data-type=\"number\">Urls</td>\n                </tr>\n                \n                \n                \n                {\n                    data.map(data => (\n                    <tr id=\"content\">\n\n                        <td key={data.id}>{data.name}</td>\n                        <td key={data.id}>{data.url}</td>\n                        {/* <td key={data.id}>{data.active}</td>\n                        <td key={data.id}>{data.recovered}</td>\n                        <td key={data.id}>{data.deaths}</td>\n                        <td key={data.id}>{data.lastupdatedtime}</td> */}\n                    </tr>\n                    ))\n                }\n                </tbody>\n\n            </table>\n        \n            </div>\n}\n    </>\n  );\n}\n\nexport default Pokemon;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}